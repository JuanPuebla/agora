<?php
/**
 * Zikula Application Framework
 *
 * @copyright (c) 2002, Zikula Development Team
 * @link http://www.zikula.org
 * @version $Id: pnadmin.php 9 2008-11-05 21:42:16Z Guite $
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 * @package Zikula_Value_Addons
 * @subpackage Stats
 */

/**
 * the main administration function
 *
 * @author       The Zikula Development Team
 * @return       output       The main module admin page.
 */
function Stats_admin_main()
{
    // Security check
    if (!SecurityUtil::checkPermission('Stats::', '::', ACCESS_EDIT)) {
        return LogUtil::registerPermissionError();
    }

    // Create output object
    $pnRender = pnRender::getInstance('Stats', false);

    // Return the output that has been generated by this function
    return $pnRender->fetch('stats_admin_main.htm');
}

/**
 * reset stats
 *
 * Reset all site statistics
 *
 * @author       The PostNuk Development Team
 * @param        site           reset site stats
 * @param        browseros      reset browser and os stats
 * @param        confirmation   confirmation that this item can be deleted
 */
function Stats_admin_reset($args)
{
    $dom = ZLanguage::getModuleDomain('Stats');
    // Get parameters from whatever input we need.
    $site = FormUtil::getPassedValue('site', isset($args['site']) ? $args['site'] : null, 'POST');
    $browseros = FormUtil::getPassedValue('browseros', isset($args['browseros']) ? $args['browseros'] : null, 'POST');
    $confirmation = FormUtil::getPassedValue('confirmation', isset($args['confirmation']) ? $args['confirmation'] : null, 'POST');

    // Security check
    if (!SecurityUtil::checkPermission('Stats::', '::', ACCESS_DELETE)) {
        return LogUtil::registerPermissionError();
    }

    // Check for confirmation.
    if (empty($confirmation)) {
        // No confirmation yet
        // Create output object
        $pnRender = pnRender::getInstance('Stats', false);

        // Return the output that has been generated by this function
        return $pnRender->fetch('stats_admin_reset.htm');
    }

    // If we get here it means that the user has confirmed the action

    // Confirm authorisation code
    if (!SecurityUtil::confirmAuthKey()) {
        return LogUtil::registerAuthidError (pnModURL('Stats', 'admin', 'main'));
    }

    // reset the site statistics
    if (pnModAPIFunc('Stats', 'admin', 'reset', array('site' => $site, 'browseros' => $browseros))) {
        // Success
        LogUtil::registerStatus (__('Stats reset', $dom));
    }

    return pnRedirect(pnModURL('Stats', 'admin', 'main'));
}

/**
 * Modify configuration
 *
 * @author       The Zikula Development Team
 * @return       output       The configuration page
 */
function Stats_admin_modifyconfig()
{
    // Security check
    if (!SecurityUtil::checkPermission('Stats::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError();
    }

    // Create output object
    $pnRender = pnRender::getInstance('Stats', false);

    // Assign all the module variables to the template
    $pnRender->assign(pnModGetVar('Stats'));

    // Return the output that has been generated by this function
    return $pnRender->fetch('stats_admin_modifyconfig.htm');
}

/**
 * Update the configuration
 *
 * @author       Mark West
 * @param        bold           print items in bold
 * @param        itemsperpage   number of items per page
 */
function Stats_admin_updateconfig()
{
    $dom = ZLanguage::getModuleDomain('Stats');
    // Security check
    if (!SecurityUtil::checkPermission('Stats::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError();
    }

    // Confirm authorisation code
    if (!SecurityUtil::confirmAuthKey()) {
        return LogUtil::registerAuthidError (pnModURL('Stats', 'admin', 'view'));
    }

    // Update module variables
    $excludeip = FormUtil::getPassedValue('excludeip', isset($args['excludeip']) ? $args['excludeip'] : '192.168.123.254', 'POST');
    pnModSetVar('Stats', 'excludeip', $excludeip);
    $collect = FormUtil::getPassedValue('collect', isset($args['collect']) ? $args['collect'] : 0, 'POST');
    pnModSetVar('Stats', 'collect', $collect);
    $twentyfourhour = FormUtil::getPassedValue('twentyfourhour', isset($args['twentyfourhour']) ? $args['twentyfourhour'] : 0, 'POST');
    pnModSetVar('Stats', 'twentyfourhour', $twentyfourhour);

    // The configuration has been changed, so we clear all caches for this module.
    $pnRender = pnRender::getInstance('Stats');
    $pnRender->clear_all_cache();

    // the module configuration has been updated successfuly
    LogUtil::registerStatus (__('Done! Module configuration updated.', $dom));

    return pnRedirect(pnModURL('Stats', 'admin'));
}
